// <auto-generated />
using System;
using System.Collections.Generic;
using Foodea.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Foodea.Migrations
{
    [DbContext(typeof(FoodeaDbContext))]
    partial class FoodeaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Foodea.Models.Recipe", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("aggregateLikes")
                        .HasColumnType("integer");

                    b.Property<bool>("cheap")
                        .HasColumnType("boolean");

                    b.Property<int>("cookingMinutes")
                        .HasColumnType("integer");

                    b.Property<string>("creditsText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("cuisines")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<bool>("dairyFree")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("diets")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<List<string>>("dishTypes")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("gaps")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("glutenFree")
                        .HasColumnType("boolean");

                    b.Property<int>("healthScore")
                        .HasColumnType("integer");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("imageType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("instructions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("license")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("lowFodmap")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("occasions")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("preparationMinutes")
                        .HasColumnType("integer");

                    b.Property<double>("pricePerServing")
                        .HasColumnType("double precision");

                    b.Property<int>("servings")
                        .HasColumnType("integer");

                    b.Property<string>("sourceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sourceUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("spoonacularSourceUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("summary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("sustainable")
                        .HasColumnType("boolean");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("vegan")
                        .HasColumnType("boolean");

                    b.Property<bool>("vegetarian")
                        .HasColumnType("boolean");

                    b.Property<bool>("veryHealthy")
                        .HasColumnType("boolean");

                    b.Property<bool>("veryPopular")
                        .HasColumnType("boolean");

                    b.Property<int>("weightWatcherSmartPoints")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("Foodea.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Profile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
